package com.svw.usp.model.standard;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class TuCostsLadderCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public TuCostsLadderCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSmsCostsIsNull() {
            addCriterion("SMS_COSTS is null");
            return (Criteria) this;
        }

        public Criteria andSmsCostsIsNotNull() {
            addCriterion("SMS_COSTS is not null");
            return (Criteria) this;
        }

        public Criteria andSmsCostsEqualTo(Integer value) {
            addCriterion("SMS_COSTS =", value, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsCostsNotEqualTo(Integer value) {
            addCriterion("SMS_COSTS <>", value, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsCostsGreaterThan(Integer value) {
            addCriterion("SMS_COSTS >", value, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsCostsGreaterThanOrEqualTo(Integer value) {
            addCriterion("SMS_COSTS >=", value, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsCostsLessThan(Integer value) {
            addCriterion("SMS_COSTS <", value, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsCostsLessThanOrEqualTo(Integer value) {
            addCriterion("SMS_COSTS <=", value, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsCostsIn(List<Integer> values) {
            addCriterion("SMS_COSTS in", values, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsCostsNotIn(List<Integer> values) {
            addCriterion("SMS_COSTS not in", values, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsCostsBetween(Integer value1, Integer value2) {
            addCriterion("SMS_COSTS between", value1, value2, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsCostsNotBetween(Integer value1, Integer value2) {
            addCriterion("SMS_COSTS not between", value1, value2, "smsCosts");
            return (Criteria) this;
        }

        public Criteria andSmsLadderIsNull() {
            addCriterion("SMS_LADDER is null");
            return (Criteria) this;
        }

        public Criteria andSmsLadderIsNotNull() {
            addCriterion("SMS_LADDER is not null");
            return (Criteria) this;
        }

        public Criteria andSmsLadderEqualTo(BigDecimal value) {
            addCriterion("SMS_LADDER =", value, "smsLadder");
            return (Criteria) this;
        }

        public Criteria andSmsLadderNotEqualTo(BigDecimal value) {
            addCriterion("SMS_LADDER <>", value, "smsLadder");
            return (Criteria) this;
        }

        public Criteria andSmsLadderGreaterThan(BigDecimal value) {
            addCriterion("SMS_LADDER >", value, "smsLadder");
            return (Criteria) this;
        }

        public Criteria andSmsLadderGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SMS_LADDER >=", value, "smsLadder");
            return (Criteria) this;
        }

        public Criteria andSmsLadderLessThan(BigDecimal value) {
            addCriterion("SMS_LADDER <", value, "smsLadder");
            return (Criteria) this;
        }

        public Criteria andSmsLadderLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SMS_LADDER <=", value, "smsLadder");
            return (Criteria) this;
        }

        public Criteria andSmsLadderIn(List<BigDecimal> values) {
            addCriterion("SMS_LADDER in", values, "smsLadder");
            return (Criteria) this;
        }

        public Criteria andSmsLadderNotIn(List<BigDecimal> values) {
            addCriterion("SMS_LADDER not in", values, "smsLadder");
            return (Criteria) this;
        }

        public Criteria andSmsLadderBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SMS_LADDER between", value1, value2, "smsLadder");
            return (Criteria) this;
        }

        public Criteria andSmsLadderNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SMS_LADDER not between", value1, value2, "smsLadder");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 26 09:57:55 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tu_costs_ladder
     *
     * @mbggenerated Fri Sep 26 09:57:55 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}